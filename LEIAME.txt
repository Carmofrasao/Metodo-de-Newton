//IMPLEMENTAÇÃO DOS MÉTODOS DE NEWTON PARA RESOLUÇÃO DE SISTEMAS NÃO LINEARES//

*ALUNOS*
Anderson Aparecido do Carmo Frasão
GRR 20204069

Erick Eckermann Cardoso
GRR20186075


*OBJETIVO*
O objetivo é encontrar os pontos críticos de funções de várias variáveis, utilizando os métodos iterativos de Newton.

À partir de uma equação de várias variáveis, encontramos a matriz Hessiana e o vetor gradiente. O ponto cŕitico será aquele que avaliado no 
vetor gradiente, retorne o vetor nulo de resultados.

Foram implementados três variantes desse método em linguagem C:
- Método Newton Padrão: Resolve o sistema linear de cada iteração utilizando o método de eliminação de Gauss;
- Método Newton Modificado: Resolve o sistema linear de cada iteração utilizando o método da fatoração LU e calcula uma nova Hessiana à cada Hess-Step somente;
- Método Newton Inexato: Resolve o sistema linear de cada iteração utilizando o método de Gauss-Seidell com no máximo 50 iterações;


*IMPLEMENTAÇÃO*
Utilizamos a linguagem C e em especial a biblioteca Libmatheval para cálculo das funçoes e derivadas.

O código está organizado de forma à deixar a função main o mais modularizada possível. Montamos uma biblioteca para cada método, cotendo as funções e declarações
necessárias para a implementação. A função main é responsável por ler os dados, chamar as funções para criar a a hessiana e o gradiente, chamar os métodos de Newton
para resolução, armazenando os resultados em matrizes distintas que contém os resultados de cada iteração dos métodos, para então imprimir os resultados.

Utilizamos uma estrutura de dados nomeada como SistLinear_t onde são armazenadas todas as informações da equação lida.
Em SistLinear.c estão todas as funções de manipulação dessa estrutura de dados, tanto quanto as funções que criam a Hessiana e o gradiente da equação lida.

Os métodos de Newton implementados seguiram os conceitos vistos em sala de aula, e utilizam como base os algoritmos apresentados. Eles e as funções particulares utilizadas
estão contidos em Metodo_de_Newton_Padrao.c, Metodo_de_Newton_Modificado.c e Metodo_de_Newton_Inexato.c. Todos eles utilizam também funções contidas em SistLinear.C.

O código utiliza de ponteiros para aloação dinâmica. Foram implementados métodos e alocação e desalocação o qual eliminaram todos os possíveis leaks de memória.

Caso ocorram erros de não alocação e divisão por zero, o código retorna a mensagem de erro expecífica para o problema.

Para compilação do código foi criado um arquivo makefile.


*EXECUÇÃO*
O programa foi implementado para ler arvivos de entrada no padrão apresentado nas expecificações do trabalho. O código compilado gera um executável newtonPC.
Ao ser executado com um arquivo de entrada, o programa imprime os resultados no próprio terminal, seguindo o padrão de impressão como expecificado.

Para compliar o código digite o comando: ~$ make
Para rodar o programa digite: ~$ ./newtonPC < (Arquivo de entrada)
Caso decida limpar os arquivos.o digite: ~$ make purge


